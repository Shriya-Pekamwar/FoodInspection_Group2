{
	"name": "FactLoadNew",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable1",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "Date_SF",
						"type": "DatasetReference"
					},
					"name": "DateDim"
				},
				{
					"dataset": {
						"referenceName": "Inspection_SF",
						"type": "DatasetReference"
					},
					"name": "DimInspection"
				},
				{
					"dataset": {
						"referenceName": "Risk_SF",
						"type": "DatasetReference"
					},
					"name": "DimRisk"
				},
				{
					"dataset": {
						"referenceName": "Violation_SF",
						"type": "DatasetReference"
					},
					"name": "DimViolation"
				},
				{
					"dataset": {
						"referenceName": "DimFacilitySF",
						"type": "DatasetReference"
					},
					"name": "DimFacility"
				},
				{
					"dataset": {
						"referenceName": "DimLocationSF",
						"type": "DatasetReference"
					},
					"name": "DimLocation"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Fact",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "join2"
				},
				{
					"name": "join3"
				},
				{
					"name": "join4"
				},
				{
					"name": "join5"
				},
				{
					"name": "join6"
				},
				{
					"name": "select1"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "aggregate1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          RESTAURANT_NAME as string,",
				"          INSPECTION_TYPE as string,",
				"          INSPECTION_DATE as date,",
				"          TOTAL_VIOLATION_SCORE as decimal(38,0),",
				"          ADDRESS as string,",
				"          ZIP_CODE as decimal(38,0),",
				"          INSPECTION_ID as string,",
				"          VIOLATION_CATEGORY_ID as decimal(38,0),",
				"          VIOLATION_CATEGORY as string,",
				"          LATITUDE as double,",
				"          LONGITUDE as double,",
				"          CITY as string,",
				"          STATE as string,",
				"          FACILITY_TYPE as string,",
				"          VIOLATION_SCORE as decimal(38,0),",
				"          RISK_CATEGORY as string,",
				"          INSPECTION_RESULT as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> source1",
				"source(output(",
				"          DATE_SK as decimal(38,0),",
				"          INSPECTIONDATE as date,",
				"          MONTH as string,",
				"          YEAR as decimal(38,0),",
				"          QUARTER as decimal(38,0),",
				"          DI_LOAD_DT as date,",
				"          DI_JOB_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> DateDim",
				"source(output(",
				"          INSPECTION_SK as decimal(38,0),",
				"          INSPECTION_ID as string,",
				"          INSPECTION_TYPE as string,",
				"          DI_LOAD_DT as date,",
				"          DI_JOB_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> DimInspection",
				"source(output(",
				"          RISK_SK as decimal(38,0),",
				"          RISK_CATEGORY as string,",
				"          DI_LOAD_DT as date,",
				"          DI_JOB_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> DimRisk",
				"source(output(",
				"          VIOLATION_SK as decimal(38,0),",
				"          VIOLATION_CATEGORY_ID as decimal(38,0),",
				"          VIOLATION_CATEGORY as string,",
				"          VIOLATION_SCORE as decimal(38,0),",
				"          DI_LOAD_DT as date,",
				"          DI_JOB_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> DimViolation",
				"source(output(",
				"          FACILITY_SK as decimal(38,0),",
				"          RESTAURANT_NAME as string,",
				"          FACILITY_TYPE as string,",
				"          DI_LOAD_DT as date,",
				"          DI_JOB_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> DimFacility",
				"source(output(",
				"          LOCATION_SK as decimal(38,0),",
				"          ADDRESS as string,",
				"          CITY as string,",
				"          STATE as string,",
				"          ZIP_CODE as decimal(38,0),",
				"          LATITUDE as double,",
				"          LONGITUDE as double,",
				"          DI_LOAD_DT as date,",
				"          DI_JOB_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> DimLocation",
				"aggregate1, DateDim join(INSPECTION_DATE == INSPECTIONDATE,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1, DimInspection join(aggregate1@INSPECTION_ID == DimInspection@INSPECTION_ID",
				"     && aggregate1@INSPECTION_TYPE == DimInspection@INSPECTION_TYPE,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"join2, DimRisk join(aggregate1@RISK_CATEGORY == DimRisk@RISK_CATEGORY,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join3",
				"join3, DimViolation join(aggregate1@VIOLATION_CATEGORY_ID == DimViolation@VIOLATION_CATEGORY_ID",
				"     && aggregate1@VIOLATION_CATEGORY == DimViolation@VIOLATION_CATEGORY",
				"     && aggregate1@VIOLATION_SCORE == DimViolation@VIOLATION_SCORE,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join4",
				"join4, DimFacility join(aggregate1@RESTAURANT_NAME == DimFacility@RESTAURANT_NAME",
				"     && aggregate1@FACILITY_TYPE == DimFacility@FACILITY_TYPE,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join5",
				"join5, DimLocation join(aggregate1@ZIP_CODE == DimLocation@ZIP_CODE",
				"     && aggregate1@ADDRESS == DimLocation@ADDRESS",
				"     && aggregate1@CITY == DimLocation@CITY",
				"     && aggregate1@STATE == DimLocation@STATE",
				"     && aggregate1@LATITUDE == DimLocation@LATITUDE",
				"     && aggregate1@LONGITUDE == DimLocation@LONGITUDE,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join6",
				"join6 select(mapColumn(",
				"          TOTAL_VIOLATION_SCORE,",
				"          INSPECTION_RESULT,",
				"          INSPECTION_SK,",
				"          VIOLATION_SK,",
				"          FACILITY_SK,",
				"          RISK_SK,",
				"          LOCATION_SK,",
				"          DATE_SK",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 keyGenerate(output(FACT_SK as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"surrogateKey1 derive(DI_LOAD_DT = currentDate(),",
				"          DI_JOB_ID = uuid()) ~> derivedColumn1",
				"source1 aggregate(groupBy(RESTAURANT_NAME,",
				"          INSPECTION_TYPE,",
				"          INSPECTION_DATE,",
				"          ADDRESS,",
				"          ZIP_CODE,",
				"          INSPECTION_ID,",
				"          VIOLATION_CATEGORY_ID,",
				"          VIOLATION_CATEGORY,",
				"          LATITUDE,",
				"          LONGITUDE,",
				"          CITY,",
				"          STATE,",
				"          FACILITY_TYPE,",
				"          VIOLATION_SCORE,",
				"          RISK_CATEGORY,",
				"          INSPECTION_RESULT),",
				"     TOTAL_VIOLATION_SCORE = sum(TOTAL_VIOLATION_SCORE)) ~> aggregate1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          FACT_SK as decimal(38,0),",
				"          DATE_SK as decimal(38,0),",
				"          INSPECTION_SK as decimal(38,0),",
				"          VIOLATION_SK as decimal(38,0),",
				"          FACILITY_SK as decimal(38,0),",
				"          LOCATION_SK as decimal(38,0),",
				"          RISK_SK as decimal(38,0),",
				"          TOTAL_VIOLATION_SCORE as decimal(38,0),",
				"          INSPECTION_RESULT as string,",
				"          DI_LOAD_DT as date,",
				"          DI_JOB_ID as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     stageInsert: true,",
				"     mapColumn(",
				"          FACT_SK,",
				"          DATE_SK,",
				"          INSPECTION_SK,",
				"          VIOLATION_SK,",
				"          FACILITY_SK,",
				"          LOCATION_SK,",
				"          RISK_SK,",
				"          TOTAL_VIOLATION_SCORE,",
				"          INSPECTION_RESULT,",
				"          DI_LOAD_DT,",
				"          DI_JOB_ID",
				"     )) ~> sink1"
			]
		}
	}
}